@use './var' as *;
@use '../../BaseButton/style';

$button: #{$cls-prefix}-button;
$base-button: #{$cls-prefix}-base-button;
$ripple: #{$cls-prefix}-ripple;
$icon: #{$cls-prefix}-icon;

@keyframes #{$button}-loading {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.#{$button} {
  min-width: $button-min-width;
  padding: $button-padding-y $button-padding-x;
  border-radius: $border-radius-medium;
  transition: all $fast-out-slow-in-timing-function $standard-duration;

  @include button();

  .#{$icon} {
    font-size: $button-icon-size;
    vertical-align: middle;
  }

  &__icon--loading {
    animation: #{$button}-loading $button-loading-duration $fast-out-slow-in-timing-function infinite;
  }

  &__prefix {
    margin-right: $button-icon-padding-content;
    margin-left: $button-icon-padding-border - $button-padding-x;
  }

  &--only-icon {
    min-width: $button-round;
    padding: $button-padding-y;
  }

  &--long {
    display: block;
    width: 100%;
  }

  &--round {
    border-radius: $button-round;
  }

  &--elevation {
    &.#{$button}--disabled,
    &.#{$button}--loading {
      @include elevation(0);
    }

    &:not(.#{$button}--disabled):not(.#{$button}--loading) {
      @include elevation(2);
      &:hover {
        @include elevation(4);
      }

      &:focus {
        @include elevation(6);
      }

      &:active {
        @include elevation(8);
      }
    }
  }

  &--variant-contained {
    $background-color: theme-pick($gray, 300);

    color: $dark-primary-text;
    background-color: $background-color;

    &.#{$button}--disabled,
    &.#{$button}--loading {
      background-color: overlay-color($background-color, $overlay-disabled);
    }

    &:not(.#{$button}--disabled):not(.#{$button}--loading) {
      &:hover {
        background-color: overlay-color($background-color, $overlay-hover);
      }

      &:focus {
        background-color: overlay-color($background-color, $overlay-focus);
      }

      &:active {
        background-color: overlay-color($background-color, $overlay-activated);
      }
    }

    @each $key, $value in $theme {
      &.#{$button}--theme-#{$key} {
        $background-color: theme-pick($value, main);

        color: theme-pick($value, main, true);
        background-color: $background-color;

        &:not(.#{$button}--disabled):not(.#{$button}--loading) {
          &:hover {
            background-color: overlay-color($background-color, $overlay-hover);
          }

          &:focus {
            background-color: overlay-color($background-color, $overlay-focus);
          }

          &:active {
            background-color: overlay-color($background-color, $overlay-activated);
          }
        }

        &.#{$button}--disabled,
        &.#{$button}--loading {
          background-color: overlay-color($background-color, $overlay-disabled);
        }
      }
    }
  }

  &--variant-outlined {
    $border-color: theme-pick($gray, 400);
    $background-color: theme-pick($gray, 100);

    // minus border width
    padding: $button-padding-y-outlined $button-padding-x-outlined;
    color: $dark-primary-text;
    background-color: transparent;
    border: $button-border-width solid $border-color;

    &.#{$button}--only-icon {
      min-width: $button-round;
      padding: $button-padding-y-outlined;
    }

    &.#{$button}--disabled,
    &.#{$button}--loading {
      background-color: overlay-color($background-color, $overlay-disabled);
      border-color: overlay-color($border-color, $overlay-disabled);

      @include elevation(0);
    }

    &:not(.#{$button}--disabled):not(.#{$button}--loading) {
      &:hover {
        background-color: overlay-color($background-color, $overlay-hover);
        border-color: overlay-color($border-color, $overlay-hover);
      }

      &:focus {
        background-color: overlay-color($background-color, $overlay-focus);
        border-color: overlay-color($border-color, $overlay-focus);
      }

      &:active {
        background-color: overlay-color($background-color, $overlay-activated);
        border-color: overlay-color($border-color, $overlay-activated);
      }
    }

    @each $key, $value in $theme {
      &.#{$button}--theme-#{$key} {
        $border-color: theme-pick($value, light);
        $color: theme-pick($value, main);

        color: $color;
        border-color: $border-color;

        &:not(.#{$button}--disabled):not(.#{$button}--loading) {
          &:hover {
            background-color: overlay-color($color, 1 - $overlay-hover);
            border-color: overlay-color($border-color, $overlay-hover);
          }

          &:focus {
            background-color: overlay-color($color, 1 - $overlay-focus);
            border-color: overlay-color($border-color, $overlay-focus);
          }

          &:active {
            background-color: overlay-color($color, 1 - $overlay-activated);
            border-color: overlay-color($border-color, $overlay-activated);
          }
        }

        &.#{$button}--disabled,
        &.#{$button}--loading {
          color: overlay-color($color, $overlay-disabled);
          border-color: overlay-color($border-color, $overlay-disabled);
        }
      }
    }
  }

  &--variant-text {
    $background-color: theme-pick($gray, 100);
    $color: $dark-primary-text;

    color: $color;
    background-color: transparent;

    &.#{$button}--disabled,
    &.#{$button}--loading {
      color: overlay-color($color, $overlay-disabled);

      @include elevation(0);
    }

    &:not(.#{$button}--disabled):not(.#{$button}--loading) {
      &:hover {
        background-color: overlay-color($background-color, $overlay-hover);
      }

      &:focus {
        background-color: overlay-color($background-color, $overlay-focus);
      }

      &:active {
        background-color: overlay-color($background-color, $overlay-activated);
      }
    }

    @each $key, $value in $theme {
      &.#{$button}--theme-#{$key} {
        $color: theme-pick($value, main);

        color: $color;

        &:not(.#{$button}--disabled):not(.#{$button}--loading) {
          &:hover {
            background-color: overlay-color($color, 1 - $overlay-hover);
          }

          &:focus {
            background-color: overlay-color($color, 1 - $overlay-focus);
          }

          &:active {
            background-color: overlay-color($color, 1 - $overlay-activated);
          }
        }

        &.#{$button}--disabled,
        &.#{$button}--loading {
          color: overlay-color($color, $overlay-disabled);
        }
      }
    }
  }
}
