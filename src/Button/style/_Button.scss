@use './var' as *;
@use '../../BaseButton/style';

$button: #{$cls-prefix}-button;
$base-button: #{$cls-prefix}-base-button;
$ripple: #{$cls-prefix}-ripple;
$icon: #{$cls-prefix}-icon;

.#{$button} {
  transition: $button-transition;

  @include button();

  &--long {
    display: block;
    width: 100%;
  }

  .#{$icon} {
    vertical-align: $button-icon-vertical-align;
  }

  .#{$button}__prefix,
  .#{$button}__suffix {
    display: inline-block;
  }

  &--size-medium {
    min-width: $button-medium-min-width;
    padding: $button-medium-padding-y $button-medium-padding-x;
    font-size: $button-medium-font-size;
    border-radius: $button-medium-border-radius;

    &.#{$button}--round {
      border-radius: $button-medium-border-radius-round;
    }

    &.#{$button}--only-icon {
      min-width: $button-medium-border-radius-round;
      padding: $button-medium-padding-y;
    }

    .#{$icon} {
      font-size: $button-medium-icon-size;
    }

    .#{$button}__prefix {
      margin-right: $button-medium-icon-padding-content;
      margin-left: $button-medium-icon-padding-border - $button-medium-padding-x;
    }

    .#{$button}__suffix {
      margin-right: $button-medium-icon-padding-border - $button-medium-padding-x;
      margin-left: $button-medium-icon-padding-content;
    }
  }

  &--size-large {
    min-width: $button-large-min-width;
    padding: $button-large-padding-y $button-large-padding-x;
    font-size: $button-large-font-size;
    border-radius: $button-large-border-radius;

    &.#{$button}--round {
      border-radius: $button-large-border-radius-round;
    }

    &.#{$button}--only-icon {
      min-width: $button-large-border-radius-round;
      padding: $button-large-padding-y;
    }

    .#{$icon} {
      font-size: $button-large-icon-size;
    }

    .#{$button}__prefix {
      margin-right: $button-large-icon-padding-content;
      margin-left: $button-large-icon-padding-border - $button-large-padding-x;
    }

    .#{$button}__suffix {
      margin-right: $button-large-icon-padding-border - $button-large-padding-x;
      margin-left: $button-large-icon-padding-content;
    }
  }

  &--size-small {
    min-width: $button-small-min-width;
    padding: $button-small-padding-y $button-small-padding-x;
    font-size: $button-small-font-size;
    border-radius: $button-small-border-radius;

    &.#{$button}--round {
      border-radius: $button-small-border-radius-round;
    }

    &.#{$button}--only-icon {
      min-width: $button-small-border-radius-round;
      padding: $button-small-padding-y;
    }

    .#{$icon} {
      font-size: $button-small-icon-size;
    }

    .#{$button}__prefix {
      margin-right: $button-small-icon-padding-content;
      margin-left: $button-small-icon-padding-border - $button-small-padding-x;
    }

    .#{$button}__suffix {
      margin-right: $button-small-icon-padding-border - $button-small-padding-x;
      margin-left: $button-small-icon-padding-content;
    }
  }

  &__icon--loading {
    &-enter-active,
    &-leave-active {
      transition: $button-icon-transition;
    }

    &-enter,
    &-leave-to {
      opacity: 0;
    }

    &-enter-to,
    &-leave {
      opacity: 1;
    }
  }

  &--elevation {
    @include elevation(2);
    &:hover {
      @include elevation(4);
    }

    &:focus {
      @include elevation(6);
    }

    &:active {
      @include elevation(8);
    }

    &.#{$button}--disabled,
    &.#{$button}--disabled:hover,
    &.#{$button}--disabled:focus,
    &.#{$button}--disabled:active,
    &.#{$button}--loading,
    &.#{$button}--loading:hover,
    &.#{$button}--loading:focus,
    &.#{$button}--loading:active {
      @include elevation(0);
    }
  }

  &--variant-contained {
    color: $button-default-color;
    background-color: $button-default-bg;

    &:hover {
      background-color: overlay-color($button-default-bg, $button-opacity-hover);
    }

    &:focus {
      background-color: overlay-color($button-default-bg, $button-opacity-focus);
    }

    &:active {
      background-color: overlay-color($button-default-bg, $button-opacity-activated);
    }

    &.#{$button}--disabled,
    &.#{$button}--disabled:hover,
    &.#{$button}--disabled:focus,
    &.#{$button}--disabled:active,
    &.#{$button}--loading,
    &.#{$button}--loading:hover,
    &.#{$button}--loading:focus,
    &.#{$button}--loading:active {
      background-color: overlay-color($button-default-bg, $button-opacity-disabled);
    }

    @each $key, $value in $button-theme {
      &.#{$button}--theme-#{$key} {
        $background-color: theme-pick($value, main);

        color: theme-pick($value, main, true);
        background-color: $background-color;

        &:hover {
          background-color: overlay-color($background-color, $button-opacity-hover);
        }

        &:focus {
          background-color: overlay-color($background-color, $button-opacity-focus);
        }

        &:active {
          background-color: overlay-color($background-color, $button-opacity-activated);
        }

        &.#{$button}--disabled,
        &.#{$button}--disabled:hover,
        &.#{$button}--disabled:focus,
        &.#{$button}--disabled:active,
        &.#{$button}--loading,
        &.#{$button}--loading:hover,
        &.#{$button}--loading:focus,
        &.#{$button}--loading:active {
          background-color: overlay-color($background-color, $button-opacity-disabled);
        }
      }
    }
  }

  &--variant-outlined {
    color: $button-default-color;
    background-color: transparent;
    border: $button-border-width solid $button-default-border-color;

    &.#{$button}--size-medium {
      padding: $button-medium-padding-y-outlined $button-medium-padding-x-outlined;

      &.#{$button}--only-icon {
        min-width: $button-medium-border-radius-round;
        padding: $button-medium-padding-y-outlined;
      }
    }

    &.#{$button}--size-small {
      padding: $button-small-padding-y-outlined $button-small-padding-x-outlined;

      &.#{$button}--only-icon {
        min-width: $button-small-border-radius-round;
        padding: $button-small-padding-y-outlined;
      }
    }

    &.#{$button}--size-large {
      padding: $button-large-padding-y-outlined $button-large-padding-x-outlined;

      &.#{$button}--only-icon {
        min-width: $button-large-border-radius-round;
        padding: $button-large-padding-y-outlined;
      }
    }

    &:hover {
      background-color: overlay-color($button-default-bg-outline, $button-opacity-hover);
      border-color: overlay-color($button-default-border-color, $button-opacity-hover);
    }

    &:focus {
      background-color: overlay-color($button-default-bg-outline, $button-opacity-focus);
      border-color: overlay-color($button-default-border-color, $button-opacity-focus);
    }

    &:active {
      background-color: overlay-color($button-default-bg-outline, $button-opacity-activated);
      border-color: overlay-color($button-default-border-color, $button-opacity-activated);
    }

    &.#{$button}--disabled,
    &.#{$button}--disabled:hover,
    &.#{$button}--disabled:focus,
    &.#{$button}--disabled:active,
    &.#{$button}--loading,
    &.#{$button}--loading:hover,
    &.#{$button}--loading:focus,
    &.#{$button}--loading:active {
      background-color: overlay-color($button-default-bg-outline, $button-opacity-disabled);
      border-color: overlay-color($button-default-border-color, $button-opacity-disabled);
    }

    @each $key, $value in $button-theme {
      &.#{$button}--theme-#{$key} {
        $border-color: theme-pick($value, light);
        $color: theme-pick($value, main);

        color: $color;
        border-color: $border-color;

        &:hover {
          background-color: overlay-color($color, 1 - $button-opacity-hover);
          border-color: overlay-color($border-color, $button-opacity-hover);
        }

        &:focus {
          background-color: overlay-color($color, 1 - $button-opacity-focus);
          border-color: overlay-color($border-color, $button-opacity-focus);
        }

        &:active {
          background-color: overlay-color($color, 1 - $button-opacity-activated);
          border-color: overlay-color($border-color, $button-opacity-activated);
        }

        &.#{$button}--disabled,
        &.#{$button}--disabled:hover,
        &.#{$button}--disabled:focus,
        &.#{$button}--disabled:active,
        &.#{$button}--loading,
        &.#{$button}--loading:hover,
        &.#{$button}--loading:focus,
        &.#{$button}--loading:active {
          color: overlay-color($color, $button-opacity-disabled);
          background-color: transparent;
          border-color: overlay-color($border-color, $button-opacity-disabled);
        }
      }
    }
  }

  &--variant-text {
    $color: $button-default-color;

    color: $color;
    background-color: transparent;

    &:hover {
      background-color: overlay-color($button-default-bg-text, $button-opacity-hover);
    }

    &:focus {
      background-color: overlay-color($button-default-bg-text, $button-opacity-focus);
    }

    &:active {
      background-color: overlay-color($button-default-bg-text, $button-opacity-activated);
    }

    &.#{$button}--disabled,
    &.#{$button}--disabled:hover,
    &.#{$button}--disabled:focus,
    &.#{$button}--disabled:active,
    &.#{$button}--loading,
    &.#{$button}--loading:hover,
    &.#{$button}--loading:focus,
    &.#{$button}--loading:active {
      color: overlay-color($color, $button-opacity-disabled);
      background-color: transparent;
    }

    @each $key, $value in $button-theme {
      &.#{$button}--theme-#{$key} {
        $color: theme-pick($value, main);

        color: $color;

        &:hover {
          background-color: overlay-color($color, 1 - $button-opacity-hover);
        }

        &:focus {
          background-color: overlay-color($color, 1 - $button-opacity-focus);
        }

        &:active {
          background-color: overlay-color($color, 1 - $button-opacity-activated);
        }

        &.#{$button}--disabled,
        &.#{$button}--disabled:hover,
        &.#{$button}--disabled:focus,
        &.#{$button}--disabled:active,
        &.#{$button}--loading,
        &.#{$button}--loading:hover,
        &.#{$button}--loading:focus,
        &.#{$button}--loading:active {
          color: overlay-color($color, $button-opacity-disabled);
          background-color: transparent;
        }
      }
    }
  }
}
