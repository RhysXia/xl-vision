@mixin _arrowWithBorder($arrowCls, $size, $bgColor, $borderSize, $borderColor) {
  $innerSize: $size * 2 - $borderSize * 2;

  .#{$arrowCls} {
    position: relative;
    width: $size * 2;
    height: $size * 2;

    &::before,
    &::after {
      position: absolute;
      display: block;
      box-sizing: border-box;
      width: 0;
      height: 0;
      content: '';
    }

    &::before {
      top: 0;
      left: 0;
      border: $size solid transparent;
    }

    &::after {
      border: $innerSize / 2 solid transparent;
    }
  }

  &[data-placement^='top'] {
    .#{$arrowCls} {
      bottom: -$size * 2;
      &::before {
        border-top-color: $borderColor;
      }

      &::after {
        top: -$borderSize;
        left: $borderSize;
        border-top-color: $bgColor;
      }
    }
  }

  &[data-placement^='bottom'] {
    .#{$arrowCls} {
      top: -$size * 2;
      &::before {
        border-bottom-color: $borderColor;
      }

      &::after {
        bottom: -$borderSize;
        left: $borderSize;
        border-bottom-color: $bgColor;
      }
    }
  }

  &[data-placement^='left'] {
    .#{$arrowCls} {
      right: -$size * 2;
      &::before {
        border-left-color: $borderColor;
      }

      &::after {
        top: $borderSize;
        left: -$borderSize;
        border-left-color: $bgColor;
      }
    }
  }

  &[data-placement^='right'] {
    .#{$arrowCls} {
      left: -$size * 2;
      &::before {
        border-right-color: $borderColor;
      }

      &::after {
        top: $borderSize;
        right: -$borderSize;
        border-right-color: $bgColor;
      }
    }
  }
}

@mixin _arrowWithoutBorder($arrowCls, $size, $bgColor) {
  .#{$arrowCls} {
    position: relative;
    width: $size * 2;
    height: $size * 2;
    &::before {
      position: absolute;
      display: block;
      box-sizing: border-box;
      width: 0;
      height: 0;
      border: $size solid transparent;
      content: '';
    }
  }

  &[data-placement^='top'] {
    .#{$arrowCls} {
      bottom: -$size * 2;
      &::before {
        border-top-color: $bgColor;
      }
    }
  }

  &[data-placement^='bottom'] {
    .#{$arrowCls} {
      top: -$size * 2;
      &::before {
        border-bottom-color: $bgColor;
      }
    }
  }

  &[data-placement^='left'] {
    .#{$arrowCls} {
      right: -$size * 2;
      &::before {
        border-left-color: $bgColor;
      }
    }
  }

  &[data-placement^='right'] {
    .#{$arrowCls} {
      left: -$size * 2;
      &::before {
        border-right-color: $bgColor;
      }
    }
  }
}

@mixin arrow($arrowCls, $size, $bgColor, $borderSize: 0, $borderColor: $bgColor) {
  @if ($borderSize==0) {
    @include _arrowWithoutBorder($arrowCls, $size, $bgColor);
  } @else {
    @include _arrowWithBorder($arrowCls, $size, $bgColor, $borderSize, $borderColor);
  }
}
