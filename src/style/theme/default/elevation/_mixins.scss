@use "sass:map";
@use "sass:math";
@use "sass:meta";
@use "./variables";

// Returns the correct box-shadow specified by $z-value.
// The $z-value must be between 0 and 24.
// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use
// $opacity-boost.
@mixin elevation(
  $z-value,
  $color: variables.$baseline-color,
  $opacity-boost: 0
) {
  @if meta.type-of($z-value) != number or not math.is-unitless($z-value) {
    @error "$z-value must be a unitless number, but received '#{$z-value}'";
  }

  @if $z-value < 0 or $z-value > 24 {
    @error "$z-value must be between 0 and 24, but received '#{$z-value}'";
  }

  $umbra-z-value: map.get(variables.$umbra-map, $z-value);
  $penumbra-z-value: map.get(variables.$penumbra-map, $z-value);
  $ambient-z-value: map.get(variables.$ambient-map, $z-value);

  $umbra-color: rgba($color, variables.$umbra-opacity + $opacity-boost);
  $penumbra-color: rgba($color, variables.$penumbra-opacity + $opacity-boost);
  $ambient-color: rgba($color, variables.$ambient-opacity + $opacity-boost);

  $box-shadow: (
    #{'#{$umbra-z-value} #{$umbra-color}'},
    #{'#{$penumbra-z-value} #{$penumbra-color}'},
    #{$ambient-z-value} $ambient-color
  );

  box-shadow: $box-shadow;
}
