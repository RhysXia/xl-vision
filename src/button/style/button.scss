@import '../../style/commons/var';
@import "../../style/function/color";

$button: #{$--cls-prefix}-button;

// mixins
@mixin button-variant($background) {
  color: color-yiq($background, $--button-text-color, $--button-text-color-light);
  background-color: $background;
  border-color: $background;

  &:hover:not(:disabled),
  &:focus:not(:disabled) {
    $background-hover: color-level($background, -$--button-color-level);

    color: color-yiq($background-hover, $--text-color, $--text-color-light);
    background-color: $background-hover;
    border-color: $background-hover;
  }

  &:active:not(:disabled) {
    $background-active: color-level($background, $--button-color-level);

    color: color-yiq($background-active, $--text-color, $--text-color-light);
    background-color: $background-active;
    border-color: $background-active;
  }
}

@mixin button-outline-variant($color) {
  color: $color;
  background-color: transparent;
  background-image: none;
  border-color: $color;

  &:hover:not(:disabled),
  &:focus:not(:disabled) {
    $color-hover: color-level($color, -$--button-color-level);

    color: $color-hover;
    background-color: transparent;
    border-color: $color-hover;
  }

  &:active:not(:disabled) {
    $color-active: color-level($color, $--button-color-level);

    color: $color-active;
    background-color: transparent;
    border-color: $color-active;
  }
}

.#{$button} {
  display: inline-block;
  padding: $--button-padding-y $--button-padding-x;
  font-weight: $--button-font-weight;
  font-size: $--button-font-size;
  // line-height: $--button-line-height;
  white-space: nowrap;
  text-align: center;
  text-decoration: none;
  border: $--button-border-width solid transparent;
  border-radius: $--button-border-radius;
  outline: none;
  cursor: pointer;
  transition:
    color $--button-animation-time ease-in-out,
    border-color $--button-animation-time ease-in-out,
    background-color $--button-animation-time ease-in-out,
    box-shadow $--button-animation-time ease-in-out;
  -webkit-appearance: none;
  user-select: none;

  &--round {
    border-radius: $--button-padding-y + $--button-font-size;
  }

  &--circle {
    min-height: $--button-padding-y * 2 + $--button-font-size;
    padding: $--button-padding-y;
    line-height: 0;
    vertical-align: middle;
    border-radius: 50%;
  }

  &--loading {
    opacity: $--button-opacity-disabled;
    pointer-events: none;
  }

  &--dashed {
    border-style: dashed;
  }

  &--long {
    display: block;
    width: 100%;
  }

  &:disabled {
    cursor: not-allowed;
    opacity: $--button-opacity-disabled;
  }

  .#{$--cls-prefix}-icon + span,
  span + .#{$--cls-prefix}-icon {
    padding-left: $--button-icon-padding;
  }

  &--default {
    background-color: $--button-bg-color;
    border-color: $--button-border-color;

    $color: map-get($--color-theme, primary);

    &:hover:not(:disabled),
    &:focus:not(:disabled) {
      $color-hover: color-level($color, -$--button-color-level);

      color: $color-hover;
      background-color: color-level($color-hover, -$--button-color-level * 4);
      border-color: color-level($color-hover, -$--button-color-level);
    }

    &:active:not(:disabled) {
      $color-active: color-level($color, $--button-color-level);

      color: $color-active;
      background-color: color-level($color-active, -$--button-color-level * 4);
      border-color: color-level($color-active, -$--button-color-level);
    }

    // &.#{$button}--plain,
    // &.#{$button}--ghost {
    //   background-color: transparent;

    //   &:hover:not(:disabled),
    //   &:focus:not(:disabled),
    //   &:active:not(:disabled) {
    //     color: $--color-primary;
    //     background-color: transparent;
    //     border-color: $--color-primary;
    //   }
    // }
  }

  &--text {
    $color: $--link-color;

    color: $color;
    background-color: transparent;

    &:hover:not(:disabled),
    &:focus:not(:disabled) {
      color: color-level($color, -$--button-color-level);
    }

    &:active:not(:disabled) {
      color: color-level($color, $--button-color-level);
    }
  }

  @each $key, $value in $--button-theme-color {
    &--#{$key} {

      @include button-variant($value);

      &.#{$button}--ghost,
      &.#{$button}--plain {

        @include button-outline-variant($value);
      }
    }
  }

  &--plain {
    background-color: $--bg-color;

    &:hover:not(:disabled),
    &:focus:not(:disabled),
    &:active:not(:disabled) {
      background-color: $--bg-color;
    }
  }
}
