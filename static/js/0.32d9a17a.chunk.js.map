{"version":3,"sources":["webpack:///./src/Button/ButtonContext.ts","webpack:///./src/Button/Button.tsx","webpack:///./src/Button/ButtonGroup.tsx","webpack:///./src/Button/index.ts","webpack:///./src/icon/base/createIcon.tsx","webpack:///./src/icon/base/BaseIcon.tsx","webpack:///./src/icon/Reload.tsx","webpack:///./src/commons/utils/logger.ts","webpack:///./src/TransitionGroup/computeQuene.ts","webpack:///./src/TransitionGroup/index.tsx","webpack:///./src/Ripple/index.tsx"],"names":["ButtonContext","React","createContext","Button","forwardRef","props","ref","rootClsPrefix","useContext","ConfigContext","clsPrefix","dashed","disabled","ghost","plain","href","htmlType","loading","long","shape","type","className","children","onClick","prefixIcon","suffixIcon","others","size","classes","classnames","onClickHandler","useCallback","e","preventDefault","prefixNode","useMemo","Reload","spin","cloneElement","suffixNode","childrenWrapper","formatChildren","Ripple","transitionClasses","allProps","propTypes","PropTypes","isRequired","Children","map","child","ButtonGroup","round","vertical","Provider","value","string","oneOfType","element","arrayOf","bool","oneOf","ButtonWithGroup","Group","createIcon","svgElement","BaseIcon","style","color","rotate","iconStyle","undefined","fontSize","getSize","transform","childrenProps","childrenStyle","height","width","fill","stroke","cloneChildren","number","object","viewBox","strokeLinecap","strokeMiterlimit","strokeWidth","d","displayName","warning","isDevelopment","condition","format","args","printWarning","index","message","replace","console","error","Error","x","computeQuene","prevChildren","nextChildren","quene","sameKeyObj","Object","create","i","length","prev","prevKey","key","j","next","prevIndex","nextIndex","prevPendingArray","nextPendingArray","sameKeys","keys","isPrevExist","includes","isNextExist","push","same","slice","TransitionGroup","beforeAppear","appear","afterAppear","appearCancelled","beforeDisappear","disappear","afterDisappeard","disappearCancelled","transitionClassesObj","obj","enter","appearActive","enterActive","appearTo","enterTo","leave","disappearActive","leaveActive","disappearTo","leaveTo","move","useState","elements","setElements","queneRef","useRef","flag","setFlag","computedRef","nodeMapRef","fillRefForElement","nodeMap","current","Map","fillRef","node","set","prevChildrenRef","filter","Boolean","childrenTrigger","useConstantCallback","forEach","_oldPos","getBoundingClientRect","refChildren","arr","data","it","isTransition","CSSTransition","afterLeave","others2","transitionOnFirst","el","in","useLayoutEffect","elementsTrigger","sameNodes","ele","get","moveClass","hasCSSTransform","clearTransition","moveNodes","applyTransition","raf","addClass","webkitTransform","transitionDuration","cb","onTransitionEnd","removeClass","_move","_el","clone","cloneNode","_ctc","values","clazz","classList","remove","split","c","add","display","container","nodeType","parentNode","appendChild","hasTransform","getTransitionInfo","removeChild","done","_done","oldPos","newPos","dx","left","dy","top","s","ripples","setRipples","finishedCountRef","waitFinishedCountRef","keyRef","ignoreMouseDonwRef","startCommit","y","styles","ripple","start","log","currentTarget","rect","touches","clientX","clientY","Math","sizeX","max","abs","clientWidth","sizeY","clientHeight","sqrt","stop","afterEnter","onMouseDown","onTouchStart","onMouseUp","onTouchEnd"],"mappings":"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","file":"static/js/0.32d9a17a.chunk.js","sourcesContent":["import React from 'react'\nimport { ButtonSize } from './Button'\n\nexport interface ButtonContextState {\n  size?: ButtonSize\n}\n\nconst ButtonContext = React.createContext<ButtonContextState>({})\n\nexport default ButtonContext\n","import classnames from 'classnames'\nimport * as PropTypes from 'prop-types'\nimport React from 'react'\nimport { Reload, IconProps } from '../icon'\nimport ButtonContext from './ButtonContext'\nimport ConfigContext from '../ConfigProvider/ConfigContext'\nimport Ripple from '../Ripple'\n\nexport type ButtonSize = 'large' | 'default' | 'small'\n\nexport interface BaseButtonProps {\n  children: React.ReactNode\n  className?: string\n  dashed?: boolean\n  disabled?: boolean\n  ghost?: boolean\n  href?: string\n  htmlType?: 'submit' | 'reset' | 'button'\n  loading?: boolean\n  long?: boolean\n  plain?: boolean\n  clsPrefix?: string\n  shape?: 'circle' | 'round'\n  size?: ButtonSize\n  type?: 'default' | 'primary' | 'success' | 'warning' | 'error' | 'text'\n  prefixIcon?: React.ReactElement<IconProps>\n  suffixIcon?: React.ReactElement<IconProps>\n}\n\nexport type ButtonProps = BaseButtonProps &\n  Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, 'type'> &\n  Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, 'type'>\n\nconst Button: React.FunctionComponent<ButtonProps> = React.forwardRef<\n  HTMLButtonElement & HTMLAnchorElement,\n  ButtonProps\n>((props, ref) => {\n  const { clsPrefix: rootClsPrefix } = React.useContext(ConfigContext)\n\n  const {\n    dashed,\n    disabled,\n    ghost,\n    plain,\n    href,\n    htmlType,\n    loading,\n    long,\n    shape,\n    type = 'default',\n    className,\n    children,\n    clsPrefix = `${rootClsPrefix}-button`,\n    onClick,\n    prefixIcon,\n    suffixIcon,\n    ...others\n  } = props\n\n  let { size } = React.useContext(ButtonContext)\n\n  // 强制使用ButtonGroup的size\n  size = size || others.size || 'default'\n\n  delete others.size\n\n  const classes = classnames(\n    {\n      [clsPrefix]: true,\n      [`${clsPrefix}--${type}`]: true,\n      [`${clsPrefix}--${shape}`]: shape,\n      [`${clsPrefix}--size-${size}`]: size,\n      [`${clsPrefix}--dashed`]: dashed,\n      [`${clsPrefix}--plain`]: plain,\n      [`${clsPrefix}--ghost`]: ghost,\n      [`${clsPrefix}--long`]: long,\n      [`${clsPrefix}--disabled`]: disabled,\n      [`${clsPrefix}--loading`]: loading\n    },\n    className\n  )\n\n  const onClickHandler = React.useCallback(\n    (e: React.MouseEvent<HTMLButtonElement & HTMLAnchorElement, MouseEvent>) => {\n      // 在disabled和loading状态下是不允许触发点击事件的\n      if (disabled || loading) {\n        e.preventDefault()\n        return\n      }\n      onClick && onClick(e)\n    },\n    [onClick, disabled, loading]\n  )\n\n  const prefixNode = React.useMemo(() => {\n    const classes = classnames(`${clsPrefix}__icon`, `${clsPrefix}__icon--prefix`)\n    if (loading) {\n      return <Reload className={classes} spin={true} />\n    }\n    if (!prefixIcon) {\n      return\n    }\n    const node = React.cloneElement(prefixIcon, {\n      className: classnames(prefixIcon.props.className, classes)\n    })\n    return node\n  }, [loading, prefixIcon, clsPrefix])\n\n  const suffixNode = React.useMemo(() => {\n    if (!suffixIcon) {\n      return\n    }\n    const classes = classnames(`${clsPrefix}__icon`, `${clsPrefix}__icon--suffix`)\n    const node = React.cloneElement(suffixIcon, {\n      className: classnames(suffixIcon.props.className, classes)\n    })\n    return node\n  }, [suffixIcon, clsPrefix])\n\n  const childrenWrapper = (\n    <>\n      {prefixNode}\n      {formatChildren(children)}\n      {suffixNode}\n      <Ripple transitionClasses={`${clsPrefix}__ripple`} />\n    </>\n  )\n\n  const allProps = {\n    ...others,\n    children: childrenWrapper,\n    className: classes,\n    disabled,\n    href,\n    type: htmlType,\n    onClick: onClickHandler\n  }\n\n  if (href) {\n    return <a ref={ref} {...allProps} />\n  }\n  return <button ref={ref} {...allProps} />\n})\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  dashed: PropTypes.bool,\n  disabled: PropTypes.bool,\n  ghost: PropTypes.bool,\n  href: PropTypes.string,\n  htmlType: PropTypes.oneOf(['submit', 'reset', 'button']),\n  loading: PropTypes.bool,\n  long: PropTypes.bool,\n  plain: PropTypes.bool,\n  clsPrefix: PropTypes.string,\n  shape: PropTypes.oneOf<'circle' | 'round'>(['circle', 'round']),\n  size: PropTypes.oneOf(['large', 'default', 'small']),\n  type: PropTypes.oneOf(['default', 'primary', 'success', 'warning', 'error', 'text']),\n  prefixIcon: PropTypes.element,\n  suffixIcon: PropTypes.element,\n  onClick: PropTypes.func\n}\n\nexport default Button\n\nconst formatChildren = (children: React.ReactNode) => {\n  return React.Children.map(children, (child) => {\n    if (typeof child === 'string') {\n      return <span>{child}</span>\n    }\n    return child\n  })\n}\n","import classnames from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { ButtonProps, ButtonSize } from './Button'\nimport ButtonContext from './ButtonContext'\nimport ConfigContext from '../ConfigProvider/ConfigContext'\n\nexport interface ButtonGroupProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactElement<ButtonProps> | Array<React.ReactElement<ButtonProps>>\n  clsPrefix?: string\n  round?: boolean\n  size?: ButtonSize\n  vertical?: boolean\n}\n\nconst ButtonGroup: React.FunctionComponent<ButtonGroupProps> = (props) => {\n  const { clsPrefix: rootClsPrefix } = React.useContext(ConfigContext)\n\n  const {\n    round,\n    vertical,\n    className,\n    clsPrefix = `${rootClsPrefix}-button-group`,\n    size = 'default',\n    ...others\n  } = props\n  const classes = classnames(\n    {\n      [clsPrefix]: true,\n      [`${clsPrefix}--horizontal`]: !vertical,\n      [`${clsPrefix}--vertical`]: vertical,\n      [`${clsPrefix}--round`]: round\n    },\n    className\n  )\n\n  return (\n    <ButtonContext.Provider value={{ size }}>\n      <div {...others} className={classes} />\n    </ButtonContext.Provider>\n  )\n}\n\nButtonGroup.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.element.isRequired,\n    PropTypes.arrayOf(PropTypes.element.isRequired)\n  ]).isRequired,\n  clsPrefix: PropTypes.string,\n  round: PropTypes.bool,\n  size: PropTypes.oneOf(['large', 'default', 'small']),\n  vertical: PropTypes.bool\n}\n\nexport default ButtonGroup\n","import Button from './Button'\nimport ButtonGroup from './ButtonGroup'\n\nexport { ButtonProps, ButtonSize } from './Button'\nexport { ButtonGroupProps } from './ButtonGroup'\n\nconst ButtonWithGroup = Button as typeof Button & {\n  Group: typeof ButtonGroup\n}\n\nButtonWithGroup.Group = ButtonGroup\n\nexport default ButtonWithGroup\n","import React from 'react'\nimport BaseIcon from './BaseIcon'\n\nexport interface IconProps {\n  className?: string\n  color?: string\n  onClick?: React.MouseEventHandler\n  rotate?: number\n  size?: number | string\n  spin?: boolean\n  style?: React.CSSProperties\n}\n\nconst createIcon = (svgElement: React.ReactElement<React.HTMLAttributes<SVGSVGElement>>) => {\n  const fn: React.FunctionComponent<IconProps> = (props) => {\n    return <BaseIcon {...props}>{svgElement}</BaseIcon>\n  }\n  return fn\n}\n\nexport default createIcon\n","import classnames from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ConfigContext from '../../ConfigProvider/ConfigContext'\n\nexport interface BaseIconProps extends React.HTMLAttributes<HTMLElement> {\n  children: React.ReactElement<React.HTMLAttributes<SVGSVGElement>>\n  className?: string\n  color?: string\n  clsPrefix?: string\n  rotate?: number\n  size?: number | string\n  spin?: boolean\n}\n\nconst getSize = (size: number | string) => {\n  if (typeof size === 'number') {\n    return size + 'px'\n  }\n  return size\n}\n\nconst BaseIcon: React.FunctionComponent<BaseIconProps> = (props) => {\n  const { clsPrefix: rootClsPrefix } = React.useContext(ConfigContext)\n\n  const {\n    className,\n    spin,\n    size,\n    style,\n    color,\n    rotate,\n    children,\n    clsPrefix = `${rootClsPrefix}-icon`,\n    ...others\n  } = props\n\n  const iconStyle: React.CSSProperties = { ...style }\n  if (size !== undefined) {\n    iconStyle.fontSize = getSize(size)\n  }\n  if (rotate !== undefined) {\n    iconStyle.transform = `rotate(${rotate}deg)`\n  }\n\n  const childrenProps = {\n    ...children.props\n  }\n\n  const customChildrenStyle: React.CSSProperties = {\n    height: '1em',\n    width: '1em',\n    fill: color || 'currentColor',\n    stroke: color || 'currentColor'\n  }\n  const childrenStyle = { ...customChildrenStyle, ...childrenProps.style }\n\n  const cloneChildren = React.cloneElement(children, {\n    ...childrenProps,\n    style: childrenStyle\n  })\n\n  const classes = classnames(\n    {\n      [clsPrefix]: true,\n      [`${clsPrefix}--spin`]: spin\n    },\n    className\n  )\n  return (\n    <i {...others} className={classes} style={iconStyle}>\n      {cloneChildren}\n    </i>\n  )\n}\n\nBaseIcon.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  clsPrefix: PropTypes.string,\n  rotate: PropTypes.number,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  spin: PropTypes.bool,\n  style: PropTypes.object\n}\n\nexport default BaseIcon\n","/* eslint-disable */\n// This file is automatically generated\n\nimport React from 'react'\nimport createIcon from './base/createIcon'\n\nconst svgElement = (\n    <svg viewBox='0 0 512 512'>\n        <path fill='none' strokeLinecap='round' strokeMiterlimit='10' strokeWidth='32' d='M400 148l-21.12-24.57A191.43 191.43 0 00240 64C134 64 48 150 48 256s86 192 192 192a192.09 192.09 0 00181.07-128'/><path d='M464 97.42V208a16 16 0 01-16 16H337.42c-14.26 0-21.4-17.23-11.32-27.31L436.69 86.1C446.77 76 464 83.16 464 97.42z'/>\n    </svg>\n)\n\nconst Reload = createIcon(svgElement)\n\nReload.displayName = 'Reload'\n\nexport { IconProps } from './base/createIcon'\n\nexport default Reload\n","import { isDevelopment } from './env'\n\nexport const warning = isDevelopment\n  ? (condition: boolean, format: string, ...args: Array<string>) => {\n      if (condition) {\n        printWarning(format, args)\n      }\n    }\n  : () => {} // eslint-disable-line  @typescript-eslint/no-empty-function\n\nconst printWarning = (format: string, args: Array<string>) => {\n  let index = 0\n  const message = `Warning: ${format.replace(/%s/g, () => args[index++])}`\n\n  if (typeof console !== 'undefined') {\n    console.error(message)\n  }\n\n  try {\n    // --- Welcome to debugging React ---\n    // This error was thrown as a convenience so that you can use this stack\n    // to find the callsite that caused this warning to fire.\n    throw new Error(message)\n  } catch (x) {}\n}\n","import { warning } from '../commons/utils/logger'\n\nexport type Data<T extends React.ReactElement> = {\n  prev: Array<T>\n  next: Array<T>\n  same?: boolean\n}\n\n/**\n * 比较前后数组，生成一个新的数组结构\n * 比较规则：\n * 1、所有比较都是基于key进行的\n * 2、节点位置发生变化的，则是以后面的数组位置为准，且内容也以后面的为准\n * 3、前后对比，节点被删除的，需要做删除标记，位置不变\n * 4、前后对比，节点是添加的，需要做添加标记，位置不变\n * 5、前后对比，相同位置上，原节点删除，新节点添加，需要标记为替换，位置不变\n */\nconst computeQuene = <T extends React.ReactElement>(\n  prevChildren: Array<T>,\n  nextChildren: Array<T>\n) => {\n  const quene: Array<Data<T>> = []\n\n  // 记录前后都存在的key\n  const sameKeyObj = Object.create(null)\n\n  for (let i = 0; i < prevChildren.length; i++) {\n    const prev = prevChildren[i]\n    const prevKey = prev.key\n    warning(!prevKey, '<TransitioGroup> must has a key')\n    for (let j = 0; j < nextChildren.length; j++) {\n      const next = nextChildren[j]\n      warning(!next.key, '<TransitioGroup> must has a key')\n      if (prev.key === next.key) {\n        sameKeyObj[prevKey + ''] = {\n          prevIndex: i,\n          nextIndex: j\n        }\n        break\n      }\n    }\n  }\n\n  let prevPendingArray: Array<T> = []\n  let nextPendingArray: Array<T> = []\n\n  const sameKeys = Object.keys(sameKeyObj)\n\n  let i = 0\n  let j = 0\n  // 由于prevObj和nextObj中no的数量相同，\n  while (i < prevChildren.length && j < nextChildren.length) {\n    const prev = prevChildren[i]\n    const next = nextChildren[j]\n    const isPrevExist = sameKeys.includes(prev.key + '')\n    const isNextExist = sameKeys.includes(next.key + '')\n\n    // prev存在，next也存在，\n    if (isPrevExist && isNextExist) {\n      // 1. 保存prevPendingArray和nextPendingArray并清空\n      if (prevPendingArray.length > 0 || nextPendingArray.length > 0) {\n        quene.push({\n          prev: prevPendingArray,\n          next: nextPendingArray\n        })\n        prevPendingArray = []\n        nextPendingArray = []\n      }\n      // 2. i++,j++，保存记录，\n      // 找到和next相同key的prev\n      const prevIndex = sameKeyObj[next.key + ''].prevIndex\n      quene.push({\n        prev: [prevChildren[prevIndex]],\n        next: [next],\n        same: true\n      })\n      i++\n      j++\n    }\n    // prev不存在，i++,暂存prev到prevPendingArray\n    if (!isPrevExist) {\n      prevPendingArray.push(prev)\n      i++\n    }\n    // next不存在，j++,暂存next到nextPendingArray\n    if (!isNextExist) {\n      nextPendingArray.push(next)\n      j++\n    }\n  }\n\n  if (i < prevChildren.length) {\n    prevPendingArray.push(...prevChildren.slice(i))\n  }\n\n  if (j < nextChildren.length) {\n    nextPendingArray.push(...nextChildren.slice(j))\n  }\n\n  // 保存prevPendingArray和nextPendingArray\n  if (prevPendingArray.length > 0 || nextPendingArray.length > 0) {\n    quene.push({\n      prev: prevPendingArray,\n      next: nextPendingArray\n    })\n  }\n\n  return quene\n}\n\nexport default computeQuene\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport CSSTransition, {\n  CSSTransitionProps,\n  CSSTransitionClassesObject,\n  TransitionElement\n} from '../CSSTransition'\nimport fillRef from '../commons/utils/fillRef'\nimport { addClass, removeClass } from '../commons/utils/class'\nimport { onTransitionEnd, getTransitionInfo, raf } from '../commons/utils/transition'\nimport computeQuene, { Data } from './computeQuene'\nimport useLayoutEffect from '../commons/hooks/useLayoutEffect'\nimport useConstantCallback from '../commons/hooks/useConstantCallback'\nimport { warning } from '../commons/utils/logger'\n\nexport interface TransitionGroupClassesObject\n  extends Omit<\n    CSSTransitionClassesObject,\n    'appear' | 'appearActive' | 'appearTo' | 'disappear' | 'disappearActive' | 'disappearTo'\n  > {\n  move?: string\n}\n\nexport type TransitionGroupClasses = string | TransitionGroupClassesObject\n\nexport interface TransitionGroupProps\n  extends Omit<\n    CSSTransitionProps,\n    | 'beforeAppear'\n    | 'appear'\n    | 'afterAppear'\n    | 'appearCancelled'\n    | 'beforeDisappear'\n    | 'disappear'\n    | 'afterDisappear'\n    | 'disappearCancelled'\n    | 'children'\n    | 'transitionOnFirst'\n    | 'in'\n    | 'css'\n    | 'classNames'\n  > {\n  children: Array<CSSTransitionProps['children']>\n  transitionClasses?: TransitionGroupClasses\n}\n\ntype TransitionGroupElement = TransitionElement & { _move?: () => void; _oldPos?: DOMRect }\n\nconst TransitionGroup: React.FunctionComponent<TransitionGroupProps> = (props) => {\n  const { children, transitionClasses, ...others } = props\n\n  // 阻止用户故意传入appear和disappear钩子\n  /* eslint-disable */\n  delete (others as any).beforeAppear\n  delete (others as any).appear\n  delete (others as any).afterAppear\n  delete (others as any).appearCancelled\n  delete (others as any).beforeDisappear\n  delete (others as any).disappear\n  delete (others as any).afterDisappeard\n  delete (others as any).disappearCancelled\n  /* eslint-enable */\n\n  const transitionClassesObj = React.useMemo(() => {\n    let obj: CSSTransitionClassesObject & { move?: string } = {}\n\n    if (!transitionClasses) {\n      return {}\n    }\n    // 组件实际上是使用CSSTransition的appear和disappear钩子实现动画，但是向用户隐藏实现细节，\n    // 所以这里需要将enter和leave的class设置到appear和disappear上\n    else if (typeof transitionClasses === 'object') {\n      obj = { ...transitionClasses }\n      obj.appear = obj.enter\n      obj.appearActive = obj.enterActive\n      obj.appearTo = obj.enterTo\n\n      obj.disappear = obj.leave\n      obj.disappearActive = obj.leaveActive\n      obj.disappearTo = obj.leaveTo\n    } else {\n      obj.appear = obj.enter = `${transitionClasses}-enter`\n      obj.appearTo = obj.enterTo = `${transitionClasses}-enter-to`\n      obj.appearActive = obj.enterActive = `${transitionClasses}-enter-active`\n      obj.disappear = obj.leave = `${transitionClasses}-leave`\n      obj.disappearTo = obj.leaveTo = `${transitionClasses}-leave-to`\n      obj.disappearActive = obj.leaveActive = `${transitionClasses}-leave-active`\n      obj.move = `${transitionClasses}-move`\n    }\n\n    return obj\n  }, [transitionClasses])\n\n  const [elements, setElements] = React.useState<Array<React.ReactElement>>([])\n\n  const queneRef = React.useRef<Array<Data<React.ReactElement>>>([])\n\n  const [flag, setFlag] = React.useState(false)\n\n  const computedRef = React.useRef(false)\n\n  const nodeMapRef = React.useRef<Map<string | number, TransitionGroupElement>>()\n\n  const fillRefForElement = React.useCallback((element: React.ReactElement) => {\n    const nodeMap = (nodeMapRef.current =\n      nodeMapRef.current || new Map<string | number, TransitionGroupElement>())\n    const key = element.key\n    warning(!key, '<TransitioGroup> must has a key')\n\n    const cb = (node: HTMLElement) => {\n      if (!node) {\n        nodeMap.delete(key!)\n      } else {\n        nodeMap.set(key!, node)\n      }\n    }\n    return fillRef(element, cb)\n  }, [])\n\n  const prevChildrenRef = React.useRef<Array<React.ReactElement>>(\n    children.filter(Boolean).map(fillRefForElement)\n  )\n\n  const childrenTrigger = useConstantCallback((children: Array<React.ReactElement>) => {\n    const nodeMap = nodeMapRef.current\n    if (nodeMap) {\n      nodeMap.forEach((node) => {\n        node._oldPos = node.getBoundingClientRect()\n      })\n    }\n\n    const prevChildren = prevChildrenRef.current\n\n    const refChildren = children.map(fillRefForElement)\n\n    const quene = (queneRef.current = computeQuene(prevChildren, refChildren))\n    const arr: Array<React.ReactElement> = []\n\n    for (const data of quene) {\n      if (data.same) {\n        const prev = data.prev[0]\n        arr.push(prev)\n        continue\n      }\n      const prev = data.prev.map((it) => {\n        const isTransition = it.type === CSSTransition\n        if (isTransition && it.props.in === false) {\n          return it\n        }\n\n        const child = isTransition ? it.props.children : it\n        const { afterLeave, ...others2 } = others\n\n        const afterLeaveWrap = (el: TransitionElement) => {\n          afterLeave && afterLeave(el)\n          prevChildrenRef.current = prevChildrenRef.current.filter((prev) => prev.key !== it.key)\n          computedRef.current = true\n        }\n\n        return (\n          <CSSTransition\n            {...others2}\n            transitionOnFirst={true}\n            afterLeave={afterLeaveWrap}\n            transitionClasses={transitionClassesObj}\n            in={false}\n            key={it.key!}\n          >\n            {child}\n          </CSSTransition>\n        )\n      })\n      data.prev = prev\n      arr.push(...prev)\n      const next = data.next\n      arr.push(...next)\n    }\n\n    setElements(arr)\n\n    computedRef.current = true\n  })\n\n  useLayoutEffect(() => {\n    childrenTrigger(children)\n  }, [children, childrenTrigger])\n\n  // Transition中需要触发两次layoutEffect才能正确调用hook\n  // 这里等待Transition逻辑执行完毕\n  useLayoutEffect(() => {\n    if (computedRef.current) {\n      setFlag((prev) => !prev)\n    }\n  }, [elements, childrenTrigger])\n\n  const elementsTrigger = useConstantCallback(() => {\n    if (!computedRef.current) {\n      return\n    }\n    computedRef.current = false\n\n    const nodeMap = nodeMapRef.current\n\n    const quene = queneRef.current\n    const arr: Array<React.ReactElement> = []\n    const sameNodes: Array<TransitionGroupElement> = []\n\n    for (const data of quene) {\n      if (data.same) {\n        const ele = data.prev[0]\n        arr.push(ele)\n        if (nodeMap) {\n          const node = nodeMap.get(ele.key!)\n          if (node) {\n            sameNodes.push(node)\n          }\n        }\n        continue\n      }\n      const prev = data.prev\n\n      const next = data.next.map((it) => {\n        return (\n          <CSSTransition\n            {...others}\n            transitionOnFirst={true}\n            key={it.key!}\n            transitionClasses={transitionClassesObj}\n            in={true}\n          >\n            {it}\n          </CSSTransition>\n        )\n      })\n      arr.push(...prev)\n      arr.push(...next)\n    }\n    prevChildrenRef.current = arr\n    setElements(arr)\n\n    const moveClass = transitionClassesObj.move\n\n    const hasMove = sameNodes.length > 0 && moveClass && hasCSSTransform(sameNodes[0], moveClass)\n\n    if (!hasMove) {\n      return\n    }\n\n    sameNodes.forEach(clearTransition)\n    const moveNodes = sameNodes.filter(applyTransition)\n\n    raf(() => {\n      moveNodes.forEach((node) => {\n        addClass(node, moveClass!)\n        const style = node.style\n        style.transform = style.webkitTransform = style.transitionDuration = ''\n        const cb = onTransitionEnd(node, () => {\n          removeClass(node, moveClass!)\n        })\n        node._move = () => {\n          cb()\n          removeClass(node, moveClass!)\n        }\n      })\n    })\n  })\n\n  // 同步执行，避免闪烁\n  useLayoutEffect(() => {\n    elementsTrigger()\n  }, [flag, elementsTrigger])\n\n  return <>{elements}</>\n}\n\nTransitionGroup.propTypes = {\n  transitionClasses: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      enter: PropTypes.string,\n      enterActive: PropTypes.string,\n      enterTo: PropTypes.string,\n      leave: PropTypes.string,\n      leaveActive: PropTypes.string,\n      leaveTo: PropTypes.string,\n      move: PropTypes.string\n    })\n  ]),\n  children: PropTypes.arrayOf(PropTypes.element.isRequired).isRequired\n}\n\nexport default TransitionGroup\n\nconst hasCSSTransform = (_el: HTMLElement, moveClass: string) => {\n  const el = _el as TransitionElement\n  // Detect whether an element with the move class applied has\n  // CSS transitions. Since the element may be inside an entering\n  // transition at this very moment, we make a clone of it and remove\n  // all other transition classes applied to ensure only the move class\n  // is applied.\n  const clone = el.cloneNode() as HTMLElement\n  if (el._ctc) {\n    for (const clazz of Object.values(el._ctc)) {\n      clazz && clone.classList.remove(clazz)\n    }\n  }\n  moveClass.split(/\\s+/).forEach((c) => c && clone.classList.add(c))\n  clone.style.display = 'none'\n  const container = (el.nodeType === 1 ? el : el.parentNode) as HTMLElement\n  container.appendChild(clone)\n  const { hasTransform } = getTransitionInfo(clone)\n  container.removeChild(clone)\n  return hasTransform\n}\n\nconst clearTransition = (el: TransitionGroupElement) => {\n  const done = el._done\n  const move = el._move\n  done && done()\n  move && move()\n}\n\nconst applyTransition = (el: TransitionGroupElement) => {\n  const oldPos = el._oldPos\n  if (!oldPos) {\n    return\n  }\n  const newPos = el.getBoundingClientRect()\n  const dx = oldPos.left - newPos.left\n  const dy = oldPos.top - newPos.top\n  if (dx || dy) {\n    const s = el.style\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`\n    s.transitionDuration = '0s'\n    return el\n  }\n}\n","import React, { TouchEvent, MouseEvent } from 'react'\nimport TransitionGroup, { TransitionGroupClasses } from '../TransitionGroup'\nimport ConfigContext from '../ConfigProvider/ConfigContext'\n\nexport interface RippleProps {\n  transitionClasses?: TransitionGroupClasses\n  clsPrefix?: string\n}\n\nconst Ripple: React.FunctionComponent<RippleProps> = (props) => {\n  const { clsPrefix: rootClsPrefix } = React.useContext(ConfigContext)\n  const { clsPrefix = `${rootClsPrefix}-ripple`, transitionClasses } = props\n\n  const [ripples, setRipples] = React.useState<Array<React.ReactElement>>([])\n  const finishedCountRef = React.useRef(0)\n  const waitFinishedCountRef = React.useRef(0)\n  const keyRef = React.useRef(0)\n  const ignoreMouseDonwRef = React.useRef(false)\n\n  const startCommit = React.useCallback(\n    ({ x, y, size }: { x: number; y: number; size: number }) => {\n      const key = keyRef.current\n      const styles: React.CSSProperties = {\n        width: size,\n        height: size,\n        top: -size / 2 + y,\n        left: -size / 2 + x\n      }\n      const ripple = <div className={`${clsPrefix}__inner`} key={key} style={styles}></div>\n      setRipples((prev) => [...prev, ripple])\n      keyRef.current++\n    },\n    [clsPrefix]\n  )\n\n  const start = React.useCallback(\n    (e: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>) => {\n      console.log(e.type)\n      if (e.type === 'mousedown' && ignoreMouseDonwRef.current) {\n        ignoreMouseDonwRef.current = false\n        return\n      }\n\n      if (e.type === 'touchstart') {\n        ignoreMouseDonwRef.current = true\n      }\n      const el = e.currentTarget as HTMLElement\n      const rect = el.getBoundingClientRect()\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const { clientX, clientY } = (e as any).touches\n        ? (e as TouchEvent).touches[0]\n        : (e as MouseEvent)\n      const x = Math.round(clientX - rect.left)\n      const y = Math.round(clientY - rect.top)\n      const sizeX = Math.max(Math.abs(el.clientWidth - x), x) * 2 + 2\n      const sizeY = Math.max(Math.abs(el.clientHeight - y), y) * 2 + 2\n      const size = Math.sqrt(sizeX ** 2 + sizeY ** 2)\n      startCommit({ x, y, size })\n    },\n    [startCommit]\n  )\n\n  const stop = React.useCallback(() => {\n    if (finishedCountRef.current > 0) {\n      setRipples((prev) => prev.slice(1))\n      finishedCountRef.current--\n      return\n    }\n    waitFinishedCountRef.current++\n  }, [])\n\n  const afterEnter = React.useCallback(() => {\n    if (waitFinishedCountRef.current > 0) {\n      setRipples((prev) => prev.slice(1))\n      waitFinishedCountRef.current--\n      return\n    }\n    finishedCountRef.current++\n  }, [])\n\n  return (\n    <div\n      className={`${clsPrefix}`}\n      onMouseDown={start}\n      onTouchStart={start}\n      onMouseUp={stop}\n      onTouchEnd={stop}\n    >\n      <TransitionGroup transitionClasses={transitionClasses} afterEnter={afterEnter}>\n        {ripples}\n      </TransitionGroup>\n    </div>\n  )\n}\n\nexport default Ripple\n"],"sourceRoot":""}